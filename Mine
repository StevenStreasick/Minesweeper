--[[
	Acts as a singular mine, which can be of three statuses: not visible, flagged, or visible
--]]

local replicatedStorage = game:GetService("ReplicatedStorage")
local Janitor = require(replicatedStorage.Janitor)
local gridFolder = game.Workspace.Grid

local mine = {}
mine.__index = mine


--[[
	Creates a new Mine object
	@param
	@return Mine
--]]
function mine.new()

	local part = gridFolder.Lowerbounds:Clone()
	local Janitor = Janitor.new()
	return setmetatable({
		_janitor = Janitor,
		Part = Janitor:Add(part, "Destroy"),
		Bomb = false,
		isVisible = false,
		Neighbors = 0,
		Flagged = false
		
	} , mine)

end
--[[
	Cleans up the mine object
	@param
	@return
]]
function mine:Destroy()
	local janitor = self._janitor
	
	if janitor then
		janitor:Destroy()
		self._janitor = nil
	end
end

return mine
